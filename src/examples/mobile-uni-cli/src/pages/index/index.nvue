<template>
    <kui-page ref="pageRef" :padding-x="0" :padding-y="0" bg-color="#FFFFFF">
        <template v-slot:body>
            <view class=" kui-flex-col kui-items-center kui-pt-6" :style="{
                height: contentHeight
            }">
                <kui-image src="/static/kviewui.png" :radius="10" width="440rpx" height="110rpx" disable-fit />
                <view class="kui-px-6 kui-mt-5">
                    <kui-text size="16px" :color="theme.colors.light.grey[6]" content="基于UNI-APP框架的多端开发UI组件库，让您的开发效率加倍提升" />
                </view>
                <view class=" kui-mt-6 kui-flex-1">
                    <kui-container width="750rpx" background-color="#F8F8F8" top-left-radius="60rpx" top-right-radius="60rpx"
                        custom-class=" kui-flex kui-flex-1" :custom-style="{padding: '0 30px'}">
                        <view class="kui-mt-6 kui-items-start kui-flex">
                            <kui-text size="16px" content="暗黑模式：" />
                            <kui-switch v-model="checked" />
                        </view>
                    </kui-container>
                </view>
            </view>
        </template>
    </kui-page>
</template>

<script setup lang="ts">
import { onMounted, ref, reactive, CSSProperties, computed, watchEffect, watch } from 'vue';
import { colorBuilder } from '@kviewui/color-builder';
import KuiButton from '@kviewui/kviewui/src/button/index.vue';
import KuiPage from '@kviewui/kviewui/src/page/index.vue';
import KuiImage from '@kviewui/kviewui/src/image/index.vue';
import KuiText from '@kviewui/kviewui/src/text/index.vue';
import KuiContainer from '@kviewui/kviewui/src/container/index.vue';
import KuiSwitch from '@kviewui/kviewui/src/switch/index.vue';
// import { default as KuiButton } from '../../kviewui/src/kui-button/kui-button.vue'
console.log(colorBuilder.generate('#F53F3F', { list: true }));
console.log(colorBuilder.generate('#F53F3F', { index: 10 }));
console.log(colorBuilder.getRgbStr('#00BC79'));
const title = ref('Hello')

const theme: KuiNamespace.Theme = uni.$kView.theme;

console.log(theme.colors.light.blue[1]);

const pageRef = ref(null);

const checked = ref(false);

let sysinfo: UniNamespace.GetSystemInfoResult = reactive({} as any);

const systemInfo = reactive({ windowHeight: '' })

let style: CSSProperties = reactive({});

const contentHeight = ref('');

watch(
    () => systemInfo.windowHeight,
    (height, preHeight) => {
        console.log(height);
        contentHeight.value = height;
    }
);

onMounted(() => {
    sysinfo = pageRef.value.getApp();
    style.height = `${sysinfo.windowHeight}px`;
    systemInfo.windowHeight = style.height;
    console.log(style);
})

const open = () => {
    uni.navigateTo({
        url: '/pages/index/bindingx'
    })
}
</script>

<style>
.content {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.logo {
    height: 200rpx;
    width: 200rpx;
    margin-top: 200rpx;
    /* margin-left: auto; */
    /* margin-right: auto; */
    margin-bottom: 50rpx;
}

.text-area {
    display: flex;
    justify-content: center;
}

.title {
    font-size: 36rpx;
    /* color: #8f8f94; */
}
</style>
